(()=>{var e={413:e=>{const t=e=>{console.log(e)};e.exports={handleError:t,sendPost:async(e,a,r)=>{const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),n=await s.json();n.error&&t(n.error),n.redirect&&(window.location=n.redirect),r&&(console.log("calling handler",n),r(n))},sendPut:async(e,a,r)=>{const s=await fetch(e,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),n=await s.json();n.error&&t(n.error),n.redirect&&(window.location=n.redirect),r&&(console.log("calling handler"),console.log(n),r(n))},hideError:()=>{}}}},t={};function a(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}(()=>{const e=a(413),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#firstname").value,r=t.target.querySelector("#lastname").value,s=t.target.querySelector("#description").value,n=t.target.querySelector("#_csrf").value,c=t.target.querySelector("#premium").checked;return e.sendPut(t.target.action,{name:`${a} ${r}`,desc:s,_csrf:n,premium:c},i),!1},r=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#oldPass").value,r=t.target.querySelector("#newPass").value,n=t.target.querySelector("#newPass2").value,c=t.target.querySelector("#_csrf").value;return a&&r&&n?(e.sendPut(t.target.action,{oldPass:a,newPass:r,newPass2:n,_csrf:c},s),!1):(e.handleError("Missing fields"),!1)},s=e=>{e.message?(ReactDOM.render(React.createElement(l,{toRender:e.message}),document.getElementById("editPassword")),document.querySelector("#resultMessage").classList.add("has-text-success"),document.querySelector("#oldPass").classList.contains("is-danger")&&document.querySelector("#oldPass").classList.toggle("is-danger"),document.querySelector("#resultMessage").classList.contains("has-text-danger")&&document.querySelector("#resultMessage").classList.toggle("has-text-danger"),document.querySelector("#newPass").classList.contains("is-danger")&&(document.querySelector("#newPass").classList.toggle("is-danger"),document.querySelector("#newPass2").classList.toggle("is-danger"))):e.error?(ReactDOM.render(React.createElement(l,{toRender:e.error}),document.getElementById("editPassword")),"Incorrect Password"==e.error?document.querySelector("#oldPass").classList.add("is-danger"):(document.querySelector("#newPass").classList.add("is-danger"),document.querySelector("#newPass2").classList.add("is-danger")),document.querySelector("#resultMessage").classList.add("has-text-danger"),document.querySelector("#resultMessage").classList.contains("has-text-success")&&document.querySelector("#resultMessage").classList.toggle("has-text-success")):ReactDOM.render(React.createElement(l,{toRender:"Unsure what went wrong"}),document.getElementById("editPassword"))};let n;const c=e=>React.createElement("div",{className:"column ml-0"},React.createElement("form",{id:"profileForm",name:"profileForm",onSubmit:t,action:"/editProfile",method:"PUT",className:"profileForm box"},React.createElement("h3",{className:"title"},"Edit Profile Info"),React.createElement("div",null,React.createElement("div",null,React.createElement("label",{htmlFor:"fname"},"First Name: "),React.createElement("input",{id:"firstname",className:"input",type:"text",name:"fname",placeholder:e.firstName??"First Name"})),React.createElement("div",null,React.createElement("label",{htmlFor:"lname"},"Last Name: "),React.createElement("input",{id:"lastname",type:"text",className:"input",name:"lname",placeholder:e.lastName??"Last Name"})),React.createElement("div",null,React.createElement("label",{htmlFor:"desc"},"Description: "),React.createElement("textarea",{id:"description",type:"text",className:"textarea",name:"desc"})),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:n}),React.createElement("div",null,React.createElement("label",{htmlFor:"premium"},"Premium Enabled: "),React.createElement("input",{id:"premium",className:"checkbox",type:"checkbox",name:"premium",defaultChecked:e.premium})),React.createElement("br",null),React.createElement("input",{className:"button",type:"submit"})))),l=e=>React.createElement("div",{className:"column box"},React.createElement("form",{id:"passwordForm",name:"passwordForm",onSubmit:r,action:"/editPassword",method:"PUT"},React.createElement("h3",{className:"title"},"Edit Password"),React.createElement("div",null,React.createElement("label",{htmlFor:"passwordOld"},"Old Password: "),React.createElement("input",{id:"oldPass",className:"input",name:"passwordOld",type:"password"})),React.createElement("div",null,React.createElement("label",{htmlFor:"passwordNew"},"New Password: "),React.createElement("input",{id:"newPass",className:"input",name:"passwordNew",type:"password"})),React.createElement("div",null,React.createElement("label",{htmlFor:"passwordNew2"},"Re-enter New Password: "),React.createElement("input",{id:"newPass2",className:"input",name:"passwordNew2",type:"password"})),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:n}),React.createElement("br",null),React.createElement("input",{id:"passwordSubmit",className:"button",type:"submit"}),React.createElement("div",{id:"resultMessage"},e.toRender))),o=e=>React.createElement("div",{className:"box"},React.createElement("h1",{className:"title"},"Profile Info"),React.createElement("div",null,e.firstName+" "??"Who are "," ",e.lastName+" "??"you? "," ",e.age??"missing age?"),React.createElement("div",null,e.description??"missing desc?"),React.createElement("div",null,e.premium?"Premium":"Not Premium")),i=async()=>{const e=await fetch("/getProfile"),t=await e.json();console.log(t),t.profile[0]&&(ReactDOM.render(React.createElement(c,{firstName:t.profile[0].name.split(" ")[0],lastName:t.profile[0].name.split(" ")[1],premium:t.profile[0].premium}),document.getElementById("editProfile")),ReactDOM.render(React.createElement(o,{firstName:t.profile[0].name.split(" ")[0],lastName:t.profile[0].name.split(" ")[1],description:t.profile[0].description,age:t.profile[0].age,premium:t.profile[0].premium}),document.getElementById("profileInfo")))};window.addEventListener("load",(()=>{(async()=>{const e=await fetch("/getToken"),t=await e.json();n=t.csrfToken,ReactDOM.render(React.createElement(o,null),document.getElementById("profileInfo")),ReactDOM.render(React.createElement(c,{csrf:t.csrfToken}),document.getElementById("editProfile")),ReactDOM.render(React.createElement(l,{csrf:t.csrfToken}),document.getElementById("editPassword")),i()})()}))})()})();