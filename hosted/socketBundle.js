(()=>{var e={413:e=>{const t=e=>{console.log(e)};e.exports={handleError:t,sendPost:async(e,n,a)=>{const o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),s=await o.json();s.error&&t(s.error),s.redirect&&(window.location=s.redirect),a&&(console.log("calling handler",s),a(s))},sendPut:async(e,n,a)=>{const o=await fetch(e,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),s=await o.json();s.error&&t(s.error),s.redirect&&(window.location=s.redirect),a&&(console.log("calling handler"),console.log(s),a(s))},hideError:()=>{}}}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,n),s.exports}(()=>{const e=io(),t=n(413);let a=5,o=!0;const s=async e=>{e.preventDefault(),t.hideError();const n=document.getElementById("editbox"),a=document.getElementById("channelBox"),s=await fetch("/getUsername"),i=await s.json(),r=await fetch("/getToken"),c=await r.json(),l=await fetch("/getProfile"),d=await l.json();d.profile&&(o=!d.profile[0].premium),t.sendPost(e.target.action,{channel:a.value||"global",content:n.value,username:i.docs[0].username,_csrf:c.csrfToken}),n.value=""},i=e=>{const t=e.split(":"),n=document.createElement("div");n.innerHTML=`\n    <div class='box tile is-parent is-vertical notification is-info'>\n        <div class='is-child mb-3'>\n            ${t[0]}\n            \n        </div>\n        <div class='is-child has-background-light has-text-dark box'>\n            ${t[1]} \n        </div>\n    </div>\n    <br />\n    `,document.getElementById("messages").prepend(n),o&&(a--,a||((()=>{const e=document.createElement("div");e.innerHTML="    <div class='box tile is-parent is-vertical notification is-warning'>\n    <div class='is-child'>\n        <div class='has-background-light p-3 box'>\n            THIS IS AN AD\n        </div>\n    </div>\n    </div>\n    <br />\n",document.getElementById("messages").prepend(e)})(),a=5))},r=t=>React.createElement("form",{id:"editForm",onSubmit:s,action:"/createMessage",method:"POST"},React.createElement("textarea",{className:"textarea is-medium",id:"editbox",type:"text"}),React.createElement("br",null),React.createElement("div",{className:"is-flex is-flex-direction-row-reverse"},React.createElement("input",{className:"button is-medium ml-2",type:"submit"}),React.createElement("input",{id:"channelBox",type:"text",className:"input",onChange:t=>(async t=>{e.removeAllListeners(),document.getElementById("messages").innerHTML="";const n=document.getElementById("channelBox");t?e.on(t.toString(),i):e.on("global",i);const a=await fetch("/getMessage?"+new URLSearchParams({channel:n.value||"global"})),o=await a.json();console.log(o.messagesArr);for(let e=0;e<o.messagesArr.length;e++)i(`${o.messagesArr[e].username}:${o.messagesArr[e].content}`)})(t.target.value),placeholder:"chat-room (leave empty for global)"})));window.addEventListener("load",(()=>{(async()=>{const t=await fetch("/getProfile");(await t.json()).profile[0]?.premium&&(o=!1),ReactDOM.render(React.createElement(r,null),document.getElementById("createMessage")),(async()=>{const t=document.getElementById("editForm"),n=document.getElementById("editbox"),a=document.getElementById("channelBox");t.addEventListener("submit",(t=>{if(t.preventDefault(),n.value){const t={message:n.value,channel:a.value||"global"};e.emit("chat message",t)}}))})(),e.on("global",i),console.log("socket bundle")})()}))})()})();